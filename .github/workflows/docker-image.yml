name: Build, Scan & Secure Docker Image with PR Comment and Manual Approval

on:
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: mangale/smart-ai

jobs:
  secure-build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.vars.outputs.image_tag }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get short commit SHA
      id: vars
      run: |
        echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
        echo "::set-output name=image_tag::$(echo $GITHUB_SHA | cut -c1-7)"

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build Docker Image (No Push Yet)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        load: true
        tags: ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}

    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.64.1/trivy_0.64.1_Linux-64bit.deb
        sudo dpkg -i trivy_0.64.1_Linux-64bit.deb

    - name: Scan Docker image with Trivy
      run: |
        trivy image \
          --severity CRITICAL,HIGH,MEDIUM \
          --ignore-unfixed \
          --format markdown \
          --output trivy-report.md \
          ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}

    - name: Comment Trivy Report on PR
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body-file: trivy-report.md
  manual-approval:
    name: Await Manual Approval
    needs: secure-build
    runs-on: ubuntu-latest
    environment:
      name: production-approval  # Setup in repo settings
    steps:
      - run: echo "Awaiting manual approval before pushing image..."

  push-image:
    name: Push Docker Image to Registry
    needs: manual-approval
    runs-on: ubuntu-latest
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and Push Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ needs.secure-build.outputs.image_tag }}
